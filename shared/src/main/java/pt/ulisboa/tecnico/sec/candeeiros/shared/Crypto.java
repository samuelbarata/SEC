package pt.ulisboa.tecnico.sec.candeeiros.shared;

/* these imported classes are generated by the ping contract */

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.security.Key;
import java.security.KeyFactory;
import java.security.NoSuchAlgorithmException;
import java.security.spec.InvalidKeySpecException;
import java.security.spec.PKCS8EncodedKeySpec;
import java.security.spec.X509EncodedKeySpec;

public class Crypto {
	private static final Logger logger = LoggerFactory.getLogger(Crypto.class);

	public static Key readKey(String resourcePath, String type) {
		try {
			byte[] encoded;
			try (InputStream fis = Crypto.class.getClassLoader().getResourceAsStream(resourcePath)) {
				encoded = new byte[fis.available()];
				fis.read(encoded);
			}
			KeyFactory keyFactory = KeyFactory.getInstance("RSA");
			if (type.equals("pub")) {
				X509EncodedKeySpec keySpec = new X509EncodedKeySpec(encoded);
				return keyFactory.generatePublic(keySpec);
			}

			PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(encoded);
			return keyFactory.generatePrivate(keySpec);
		} catch (IOException | NoSuchAlgorithmException | InvalidKeySpecException | NullPointerException e) {
			logger.error("Could not read {} key in file {}:", type, resourcePath);
			e.printStackTrace();
			System.exit(1);
			// For the compiler
			return null;
		}
	}
}